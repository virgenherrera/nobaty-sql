import { ICrudController } from '../Lib/interfaces';
import { IGetAll{{Module}}, {{Module}}Repository } from '../Repository/{{Module}}';
import { {{Module}} } from '../Poco/{{Module}}';
// only for debugging
// import { dd, dump , die } from '../Lib/Debug';

/* {{Module}} Controller Class */
export class {{Module}}Controller implements ICrudController {

	get repository() {
		return new {{Module}}Repository;
	}

	async createAction(params: any): Promise<any> {
		const Entity = new {{Module}}(params);
		const data = await this.repository.Create(Entity);

		return new {{Module}}(data);
	}

	async listAction(params: any): Promise<IGetAll{{Module}}> {
		return await this.repository.GetAll(params);
	}

	async showAction(params: any): Promise<{{Module}}> {
		return await this.repository.GetById(params);
	}

	async editAction(params: any): Promise<{{Module}}> {
		const Dto = new {{Module}}(params);

		return await this.repository.Update(params);
	}

	async deleteAction({ id }): Promise<{{Module}}> {
		return await this.repository.Delete(id);
	}
}
